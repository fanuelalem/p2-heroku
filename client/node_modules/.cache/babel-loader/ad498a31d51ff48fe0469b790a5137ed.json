{"ast":null,"code":"var _jsxFileName = \"/Users/fanuelalem/myproject02/Project-02/client/src/containers/UserForm.js\";\n// import React from 'react';\n// import \"./../../components/App/index.css\"\n// // import \"./../../src/\"\n// import axios from 'axios';\n// import \"./../../components/App/index.css\"\n// // import \"./../../src/\"\n// // import UserListItem from \"../UserListItem\"\n// class UserForm extends React.Component {\n//     state = {\n//         id: 0,\n//         name: \"\",\n//         jedi: {},\n//         sith: {},\n//         status: \"good\",\n//     }\n//     componentDidMount() {\n//         this.fetchJediUsers();\n//         this.fetchSithUsers();\n//     }\n//     handleChange = (e) => {\n//         const { value } = e.target;\n//         this.setState({ name: value });\n//     };\n//     handleSubmit = (e) => {\n//         e.preventDefault();\n//         // evaluate the response doing the average and if is > 70 === good else ===bad\n//         let numRandom = Math.random() * 100\n//         let status = numRandom > 50 ? \"good\" : \"bad\";\n//         console.log(status, numRandom)\n//         if (status === \"good\") {\n//             this.postJediData()\n//         }\n//         else {\n//             this.postSithData()\n//         }\n//         this.props.onSubmit({\n//             id: this.state.id++,\n//             name: this.state.name,\n//             sith: \"false\",\n//             jedi: \"false\",\n//         })\n//         this.setState({\n//             name: \"\"\n//         });\n//     }\n//     postJediData = () => {\n//         axios.post('/jedi/users', { jedi: this.state.name })\n//             .then((res) => {\n//                 this.setState({ users: res.data, name: \"\" })\n//             })\n//             .catch((e) => {\n//                 console.log(e)\n//             })\n//     }\n//     postSithData = () => {\n//         axios.post('/sith/users', { sith: this.state.name })\n//             .then((res) => {\n//                 this.setState({ users: res.data, name: \"\" })\n//             })\n//             .catch((e) => {\n//                 console.log(e)\n//             })\n//     }\n//     fetchJediUsers = () => {\n//         console.log(\"fetchJedi\")\n//         axios.get('/jedi/users')\n//             .then((res) => {\n//                 // console.log(res);\n//                 console.log(res.data)\n//                 this.setState({ jedi: res.data })\n//             })\n//             .catch((e) => {\n//                 console.log(e)\n//             })\n//     }\n//     fetchSithUsers = () => {\n//         console.log(\"fetchSith\")\n//         axios.get('/sith/users')\n//             .then((res) => {\n//                 console.log(res.data);\n//                 this.setState({ sith: res.data })\n//             })\n//             .catch((e) => {\n//                 console.log(e)\n//             })\n//     }\n//     deleteJediById = (id) => {\n//         axios.delete(`/jedi/users/${id}`)\n//             .then(() => {\n//                 this.fetchJediUsers()\n//             })\n//             .catch((e) => {\n//                 console.log(e)\n//             })\n//     }\n//     deleteSithById = (id) => {\n//         axios.delete(`/sith/users/${id}`)\n//             .then(() => {\n//                 this.fetchSithUsers();\n//             })\n//             .catch((e) => {\n//                 console.log(e)\n//             })\n//     }\n//     deleteUsersById = () => {\n//         this.deleteSithById()\n//         this.deleteJediById()\n//     }\n//     render() {\n//         return (\n//             <div>\n//                 {/* <div class=\"form-group\">\n//     <label for=\"exampleInputEmail1\">Email address</label>\n//     <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\">\n//     <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n//   </div> */}\n// <form>\n//     <div className=\"form-group\">\n// <br />\n// <input className=\"input-form-lg; \" name=\"name\"\n//      placeholder =\"Whats Your Name\"\n//     value={this.state.name} onChange={this.handleChange} />\n//     <button className=\"add-player\" onClick={this.handleSubmit}> <strong> + Add Player</strong>   </button>\n// </div>\n// </form>\n//                 {/* <UserListItems items={this.state.users} handleDelete={this.deleteUsersById}\n//          /> */}\n//             </div>\n//         );\n//     }\n// }\n// export default UserForm;\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport ListItems from './ListItems';\nimport Questions from \"./questions\"; // import \"./../../../App.css\"\n\nclass UserForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      users: [],\n      status: \"good\"\n    };\n\n    this.componentDidMount = () => {\n      this.getUsers();\n    };\n\n    this.onChangeHandler = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.onSubmitHandler = event => {\n      event.preventDefault();\n      let numRandom = Math.random() * 100;\n      let status = numRandom > 50 ? \"good\" : \"bad\";\n      console.log(status, numRandom);\n\n      if (status === \"good\") {\n        this.postJedi();\n      } else {\n        this.postSith();\n      }\n    };\n\n    this.getUsers = () => {\n      axios.get('/users').then(response => {\n        this.setState({\n          users: response.data\n        }, () => {\n          console.log(response.data);\n        });\n      }).catch(e => {\n        console.log(e);\n      });\n    };\n\n    this.postSith = () => {\n      axios.post(\"/sith\", {\n        name: this.state.name\n      }).then(response => {\n        this.getUsers();\n        this.setState({\n          name: \"\"\n        });\n      }).catch(e => {\n        console.log(e);\n      });\n    };\n\n    this.postJedi = () => {\n      axios.post(\"/jedi\", {\n        name: this.state.name\n      }).then(response => {\n        this.getUsers();\n        this.setState({\n          name: \"\"\n        });\n      }).catch(e => {\n        console.log(e);\n      });\n    };\n\n    this.deleteUserById = id => {\n      axios.delete(`/users/${id}`).then(response => {\n        this.getUsers();\n      }).catch(e => {\n        console.log(e);\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Questions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"class-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"form-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 17\n      }\n    }, \" \"), /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"name\",\n      onChange: this.onChangeHandler,\n      value: this.state.name,\n      type: \"text\",\n      name: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary submit\",\n      onClick: this.onSubmitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 18\n      }\n    }, \"signup\"))), /*#__PURE__*/React.createElement(ListItems, {\n      items: this.state.users,\n      handleDelete: this.deleteUserById,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 17\n      }\n    })))));\n  }\n\n}\n\nexport default UserForm;","map":{"version":3,"sources":["/Users/fanuelalem/myproject02/Project-02/client/src/containers/UserForm.js"],"names":["React","Component","axios","ListItems","Questions","UserForm","state","name","users","status","componentDidMount","getUsers","onChangeHandler","event","setState","target","value","onSubmitHandler","preventDefault","numRandom","Math","random","console","log","postJedi","postSith","get","then","response","data","catch","e","post","deleteUserById","id","delete","render"],"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","sourcesContent":["// import React from 'react';\n// import \"./../../components/App/index.css\"\n// // import \"./../../src/\"\n// import axios from 'axios';\n// import \"./../../components/App/index.css\"\n// // import \"./../../src/\"\n// // import UserListItem from \"../UserListItem\"\n\n// class UserForm extends React.Component {\n//     state = {\n//         id: 0,\n//         name: \"\",\n//         jedi: {},\n//         sith: {},\n//         status: \"good\",\n\n//     }\n\n//     componentDidMount() {\n\n//         this.fetchJediUsers();\n\n//         this.fetchSithUsers();\n//     }\n//     handleChange = (e) => {\n//         const { value } = e.target;\n//         this.setState({ name: value });\n//     };\n\n\n\n\n//     handleSubmit = (e) => {\n//         e.preventDefault();\n//         // evaluate the response doing the average and if is > 70 === good else ===bad\n//         let numRandom = Math.random() * 100\n//         let status = numRandom > 50 ? \"good\" : \"bad\";\n//         console.log(status, numRandom)\n//         if (status === \"good\") {\n//             this.postJediData()\n//         }\n//         else {\n//             this.postSithData()\n//         }\n//         this.props.onSubmit({\n//             id: this.state.id++,\n//             name: this.state.name,\n//             sith: \"false\",\n//             jedi: \"false\",\n//         })\n\n//         this.setState({\n//             name: \"\"\n//         });\n\n//     }\n\n\n\n//     postJediData = () => {\n\n//         axios.post('/jedi/users', { jedi: this.state.name })\n//             .then((res) => {\n//                 this.setState({ users: res.data, name: \"\" })\n//             })\n//             .catch((e) => {\n//                 console.log(e)\n//             })\n\n//     }\n//     postSithData = () => {\n\n//         axios.post('/sith/users', { sith: this.state.name })\n//             .then((res) => {\n//                 this.setState({ users: res.data, name: \"\" })\n//             })\n//             .catch((e) => {\n//                 console.log(e)\n//             })\n\n//     }\n\n\n//     fetchJediUsers = () => {\n//         console.log(\"fetchJedi\")\n//         axios.get('/jedi/users')\n//             .then((res) => {\n//                 // console.log(res);\n//                 console.log(res.data)\n//                 this.setState({ jedi: res.data })\n//             })\n//             .catch((e) => {\n//                 console.log(e)\n//             })\n//     }\n\n//     fetchSithUsers = () => {\n//         console.log(\"fetchSith\")\n//         axios.get('/sith/users')\n//             .then((res) => {\n//                 console.log(res.data);\n//                 this.setState({ sith: res.data })\n//             })\n//             .catch((e) => {\n//                 console.log(e)\n//             })\n//     }\n\n\n//     deleteJediById = (id) => {\n\n//         axios.delete(`/jedi/users/${id}`)\n//             .then(() => {\n//                 this.fetchJediUsers()\n\n//             })\n//             .catch((e) => {\n//                 console.log(e)\n//             })\n\n//     }\n\n\n//     deleteSithById = (id) => {\n\n//         axios.delete(`/sith/users/${id}`)\n//             .then(() => {\n//                 this.fetchSithUsers();\n//             })\n//             .catch((e) => {\n//                 console.log(e)\n//             })\n\n//     }\n\n//     deleteUsersById = () => {\n\n//         this.deleteSithById()\n//         this.deleteJediById()\n\n//     }\n    \n//     render() {\n\n//         return (\n//             <div>\n\n//                 {/* <div class=\"form-group\">\n//     <label for=\"exampleInputEmail1\">Email address</label>\n//     <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\">\n//     <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n//   </div> */}\n\n\n// <form>\n//     <div className=\"form-group\">\n// <br />\n// <input className=\"input-form-lg; \" name=\"name\"\n//      placeholder =\"Whats Your Name\"\n//     value={this.state.name} onChange={this.handleChange} />\n//     <button className=\"add-player\" onClick={this.handleSubmit}> <strong> + Add Player</strong>   </button>\n// </div>\n// </form>\n//                 {/* <UserListItems items={this.state.users} handleDelete={this.deleteUsersById}\n//          /> */}\n//             </div>\n//         );\n//     }\n// }\n\n// export default UserForm;\n\n\n\n\n \n\nimport React, { Component } from 'react'\nimport axios from 'axios'\nimport ListItems from './ListItems'\nimport Questions from \"./questions\"\n// import \"./../../../App.css\"\n\nclass UserForm extends Component {\n\n    state = {\n        name:'',\n         users:[],\n         status: \"good\",\n\n      }\n\n      componentDidMount=()=>{\n          this.getUsers()\n      }\n\n    onChangeHandler = (event) => {\n        this.setState({[event.target.name]:event.target.value})\n \n    }\n\n\n\n\nonSubmitHandler = (event) => {\nevent.preventDefault()\nlet numRandom = Math.random() * 100\nlet status = numRandom > 50 ? \"good\" : \"bad\";\nconsole.log(status, numRandom)\nif(status === \"good\"){\n    this.postJedi()\n}\nelse{\n    this.postSith()\n\n}\n }\n\n\ngetUsers = () => {\n     axios.get('/users')\n    .then((response)=>{\n        this.setState({\n            users: response.data\n        }, ()=>{\n            console.log(response.data)\n        })\n    })\n    .catch((e)=>{\n        console.log(e)\n    })\n}\n\npostSith = () => {\n    axios.post(\"/sith\", {name:this.state.name})\n    .then((response)=>{\n        this.getUsers()\n        this.setState({name:\"\"})\n        \n    })\n    .catch((e)=>{\n        console.log(e)\n    })\n}\n\npostJedi = () => {\n    axios.post(\"/jedi\", {name:this.state.name})\n    .then((response)=>{\n        this.getUsers()\n        this.setState({name:\"\"})\n        \n    })\n    .catch((e)=>{\n        console.log(e)\n    })\n}\n\ndeleteUserById = (id) => {\n    axios.delete(`/users/${id}`)\n    .then((response)=>{\n        this.getUsers();\n    })\n    .catch((e)=>{\n        console.log(e)\n    })\n}\n\n    render() {\n        return (\n            <div>\n                <Questions \n                \n                />\n        \n            <div className=\"form-container\">\n                <div className=\"row\">\n                    <div className=\"col-12\"> \n                    <form> \n                    <div className=\"class-form\"> \n                <h1 className=\"form-title\"> </h1>\n                 \n                 <input placeholder=\"name\" onChange={this.onChangeHandler} value={this.state.name} type=\"text\" name=\"name\"></input>\n \n                 <button className=\"btn btn-primary submit\"onClick={this.onSubmitHandler}>signup</button>\n\n                </div>\n                </form>\n                <ListItems items={this.state.users} handleDelete={this.deleteUserById}/>\n                    </div>\n                    </div>\n                </div>\n\n             </div>  \n\n         );\n    }\n}\n\n\nexport default UserForm\n\n"]},"metadata":{},"sourceType":"module"}